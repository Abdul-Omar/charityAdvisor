{"version":3,"sources":["Images/background.jpeg","Images/background2.jpg","Images/background4.jpg","Images/background5.jpg","components/Navbar.js","components/SearchBar.js","components/SlideShow.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","onRouteChange","className","onClick","href","title","url","URL","SearchBar","props","onSubmitSearch","search","URLSearchParams","app_id","app_key","zip","toString","fetch","then","response","json","data","element","console","log","state","for","class","id","type","this","React","Component","fadeProperties","duration","transitionDuration","infinite","indicators","onChange","oldIndex","newIndex","SlideShow","src","image1","image2","image4","image5","initialState","input","imageUrl","box","route","isSignedIn","user","name","email","entries","joined","App","setState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.51ddbf6c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.0d34e806.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/background2.e3893f9b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background4.1febad35.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background5.4256c48a.jpg\";","\r\nimport React, { Component } from 'react';\r\nimport 'tachyons';\r\nimport '../Nav.css'\r\nconst Navbar = ({onRouteChange}) =>{\r\n\r\nreturn (\r\n     <nav className=\"bg-dark-green w-100 top-bar fixed mt0 pa3\">    \r\n         <ul className=\"main-nav dark-gray f6 fw6 ttu tracked \">\r\n            <li> <a  onClick={() => onRouteChange('home')} className=\" link dim white  dib mr3\" href=\"#\" title=\"Home\">Home</a> </li>\r\n            <li> <a onClick={() => onRouteChange('about')}  className=\" link dim white dib mr3\" href=\"#\" title=\"About\">About</a> </li> \r\n            <li> <a onClick={() => onRouteChange('teaching')} className=\"  link  dim white pr3 dib\" href=\"#\" title=\"About\">Giving</a></li> \r\n            <li className=\"Push\"><a onClick={() => onRouteChange('contact')} className=\"link Push dim  white\" href=\"#\" title=\"contact\">contact</a></li> \r\n        </ul>\r\n     </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport '../Nav.css';\r\n\r\n\r\n\r\n\r\nconst url = new URL('https://cors-anywhere.herokuapp.com/https://api.data.charitynavigator.org/v2/Organizations');\r\n\r\nclass SearchBar extends React.Component {\r\n\r\n  constructor(props) {\r\n\t    super(props);\r\n\t    this.state = {\r\n\t      data: []\r\n\t    }\r\n    }\r\n    \r\n    onSubmitSearch = () => {\r\n\r\n    \t    var params = {app_id: 'b8cb661c', app_key: 'b55d0a5d26c6fad893f91244e7229e4b', zip:\"92105\"} // or:\r\n\t\t\t//var params = [['lat', '35.696233'], ['long', '139.570431']]\r\n\r\n\t\t\turl.search = new URLSearchParams(params).toString();\r\n\t\t    fetch(url)\r\n\t\t      .then(response => response.json())\r\n\t\t      .then(data => {\r\n\t\t      \t\r\n\r\n\t\t      \tfor(var element in data){\r\n\r\n\t\t      \t\t//if(element.charityName == \"Religious Science Church Center of San Diego\" ) \r\n\t\t      \t\t\t  console.log(\"hello\");\r\n\t\t      \t}\r\n\t\t      \r\n\t\t      })\r\n  }\r\n\t\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<form className=\" flex search pt5 black-80 \">\r\n\t\t\t\t  <div className=\"measure\">\r\n\t\t\t\t    <label for=\"name\" class=\"f6 b db mb2\">Search Charities Nearby. Input Your Zip Code <span class=\"normal black-60\"></span></label>\r\n\t\t\t\t    <input id=\"name\" class=\"input-reset ba b--black-20 pa2 pl4 mb2 db w-300\" type=\"text\"/>\r\n\t\t\t\t    <a  onClick={this.onSubmitSearch} className=\"buttonn w-70 f6 grow no-underline br-pill ph3 pv2 mb2 dib white bg-dark-green\" href=\"#0\">Go!</a>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default SearchBar","import React from 'react';\r\nimport { Fade } from 'react-slideshow-image';\r\nimport image1 from '../Images/background.jpeg'\r\nimport image2 from '../Images/background2.jpg'\r\nimport image4 from '../Images/background4.jpg'\r\nimport image5 from '../Images/background5.jpg'\r\nimport '../Slide.css';\r\n \r\n\r\n \r\nconst fadeProperties = {\r\n  duration: 5000,\r\n  transitionDuration: 500,\r\n  infinite: true,\r\n  indicators: true,\r\n  onChange: (oldIndex, newIndex) => {\r\n    console.log(`fade transition from ${oldIndex} to ${newIndex}`);\r\n  }\r\n}\r\n \r\nconst SlideShow = () => {\r\n  return (\r\n    <div className=\"slide-container\">\r\n      <Fade {...fadeProperties}>\r\n        <div className=\"each-fade\">\r\n          <div className=\"image-container\">\r\n            <img src={image1} />\r\n          </div>\r\n          <h2>Feed The Hungry</h2>\r\n        </div>\r\n        <div className=\"each-fade\">\r\n          <div className=\"image-container\">\r\n            <img src={image2} />\r\n          </div>\r\n          <h2>Prevent Food Waste</h2>\r\n        </div>\r\n        <div className=\"each-fade\">\r\n          <div className=\"image-container\">\r\n            <img src={image4} />\r\n          </div>\r\n          <h2>Support Local Charities</h2>\r\n        </div>\r\n        <div className=\"each-fade\">\r\n          <div className=\"image-container\">\r\n            <img src={image5} />\r\n          </div>\r\n          <h2>Pay It Forward</h2>\r\n        </div>\r\n      </Fade>\r\n    </div>\r\n  );\r\n}\r\nexport default SlideShow;","import React, { Component } from 'react';\r\nimport Navbar from './components/Navbar'\r\nimport SearchBar from './components/SearchBar'\r\nimport SlideShow from './components/SlideShow'\r\nimport './App.css';\r\nimport './Nav.css'\r\nimport './Slide.css';\r\n\r\n\r\n\r\nconst initialState = {\r\n  input: '',\r\n  imageUrl: '',\r\n  box: {},\r\n  route: 'signin',\r\n  isSignedIn: false,\r\n  user: {\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    entries: 0,\r\n    joined: ''\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n\r\n   onRouteChange = (route) => {\r\n    if (route === 'signout') {\r\n      this.setState(initialState)\r\n    } else if (route === 'home') {\r\n      this.setState({isSignedIn: true})\r\n    }\r\n    this.setState({route: route});\r\n  }\r\n\r\n  render() {\r\n    const { isSignedIn, imageUrl, route, box } = this.state;\r\n    return (\r\n\r\n        <div>\r\n            <div className=\"App flex\">\r\n              <Navbar> </Navbar> \r\n              <h3 className=\"light-red dark-green orange mt5\">\r\n                  Every day, thousands of pounds of perfectly good food \r\n                  is wasted in the hotel/Restaurant industry while\r\n                  thousands of needy people go hungry.\r\n                  We want to solve this problem by\r\n                  giving you a chance to connect instantly with \r\n                  charities nearby who could \r\n                  distribute this food to deserving people!\r\n              </h3>\r\n          </div>\r\n          <div className=\"center\">\r\n              <SearchBar> </SearchBar>\r\n          </div>\r\n          <div> <SlideShow/> </div>\r\n        </div>\r\n\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}