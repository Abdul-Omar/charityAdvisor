{"version":3,"sources":["Images/background.jpeg","Images/background2.jpg","Images/background4.jpg","Images/background5.jpg","Images/food.svg","components/Navbar.js","components/SearchBar.js","components/CharityList.js","components/Charity.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","onRouteChange","className","onClick","href","title","SearchBar","props","handleChange","event","setState","criteria","target","value","handleInput","sendDataToParent","getData","state","onSubmitSearch","charityList","errorOccured","bind","this","onChange","id","type","Component","url","React","URL","CharityList","fetching","error","params","data","console","log","app_id","app_key","zip","city","search","URLSearchParams","toString","fetch","then","response","json","errorMessage","message","catch","err","list","map","charity","index","key","charityName","irsClassification","classification","mailingAddress","streetAddress1","streetAddress2","stateOrProvince","initialState","route","App","getDataFromSearchBar","src","food","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c15fc2de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.0d34e806.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/background2.e3893f9b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background4.1febad35.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background5.4256c48a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/food.c2d14d7f.svg\";","\r\nimport React, { Component } from 'react';\r\nimport 'tachyons';\r\nimport '../Nav.css'\r\nconst Navbar = ({onRouteChange}) =>{\r\n\r\nreturn (\r\n     <nav className=\"bg-dark-green w-100 top-bar fixed mt0 pa3\">    \r\n         <ul className=\"main-nav dark-gray f6 fw6 ttu tracked \">\r\n            <li> <a  onClick={() => onRouteChange('Home')} className=\" link dim white  dib mr3\" href=\"#\" title=\"Home\">Home</a> </li>\r\n        </ul>\r\n     </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport '../Nav.css';\r\nimport 'tachyons';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass SearchBar extends Component {\r\n\r\n  constructor(props) {\r\n\t    super(props);\r\n\t    this.state = {\r\n\t       criteria: 'zip',\r\n\t       value:\"\",\r\n\t       charityList: [],\r\n\t       errorOccured: false\r\n\r\n\r\n\t    }\r\n\r\n\t    this.handleChange = this.handleChange.bind(this);\r\n\t    this.handleInput = this.handleInput.bind(this);\r\n\t    this.sendDataToParent = this.sendDataToParent.bind(this);\r\n    }\r\n\r\n\r\n   handleChange = (event) =>\r\n      this.setState({criteria: event.target.value});\r\n   handleInput = (event) =>\r\n      this.setState({value: event.target.value});\r\n   \r\n   sendDataToParent = ()=> {\r\n\r\n   \t\t//e.preventDefault();\r\n   \t\tthis.props.getData(this.state.value, this.state.criteria);\r\n   \t\t//console.log(data);\r\n\r\n   }\r\n    onSubmitSearch = (event) => {\r\n\r\n\t     \r\n\t      //console.log(this.state.charityList.length);\r\n\t   \t\t this.sendDataToParent();\r\n\r\n\t          \t  \r\n\r\n\t  }\r\n\r\n\r\n\t\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t     <div className= \"flex center\">\r\n\t\t\t\t\t<form className=\"flex-column center search pt5 black-80\">\r\n\t\t\t\t\t<div> \r\n\t\t\t\t        <label>\r\n\t\t\t\t         Search charity by:   \r\n\t\t\t\t          <select  className=\"center fw6 w-300\" criteria={this.state.criteria} onChange={this.handleChange}>\r\n\t\t\t\t            <option value=\"zip\">Zip Code</option>\r\n\t\t\t\t            <option value=\"city\">City</option>\r\n\t\t\t\t            <option value=\"name\">Name</option>\r\n\t\t\t\t          </select>\r\n\t\t\t\t        </label>\r\n\t\t\t        </div>\r\n\t\t\t\t  <div className=\"measure\">\r\n\t\t\t\t    <input value={this.state.value} onChange={this.handleInput} id=\"name\" className=\"input-reset ba b--black-20 pa2 pl4 mb2 \" type=\"text\"/>\r\n\t\t\t\t    <a  onClick= {this.onSubmitSearch} className=\" center buttonn w-70 f6 grow no-underline br-pill ph3 pv2 mb2 dib white bg-dark-green w-300\" href=\"#0\">Go!</a>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default SearchBar","import React, { Component } from 'react';\r\nimport '../Nav.css';\r\nimport './charityList.css';\r\nimport Charity from './Charity'\r\n\r\nconst url = new URL('https://cors-anywhere.herokuapp.com/https://api.data.charitynavigator.org/v2/Organizations');\r\n\r\n\r\nclass CharityList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           fetching: false,\r\n           criteria: 'zip',\r\n           value:\"\",\r\n           charityList: [],\r\n           errorOccured:false,\r\n           error:''\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n          this.setState({fetching:true})\r\n\r\n          const {criteria, value} = this.props.data; \r\n\r\n           console.log( criteria);\r\n           console.log(value);\r\n          \r\n          let params;\r\n\r\n          if(criteria === \"zip\"){\r\n\r\n\r\n             params = {app_id: 'b8cb661c', app_key: 'b55d0a5d26c6fad893f91244e7229e4b', zip:value}\r\n          }else if( criteria === \"city\"){\r\n\r\n\r\n\r\n             params = {app_id: 'b8cb661c', app_key: 'b55d0a5d26c6fad893f91244e7229e4b', city:value}\r\n          }\r\n          else{\r\n\r\n\r\n            params = {app_id: 'b8cb661c', app_key: 'b55d0a5d26c6fad893f91244e7229e4b', search:value}\r\n          }\r\n\r\n\r\n          url.search = new URLSearchParams(params).toString();\r\n          fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n\r\n                    if (data.errorMessage){\r\n\r\n\r\n                      this.setState({error:data.errorMessage.message})\r\n                    }\r\n\r\n                    else {\r\n\r\n                         this.setState({\r\n\r\n\r\n                charityList:data\r\n              })\r\n\r\n\r\n                    }\r\n\r\n             \r\n              \r\n                this.setState ({fetching:false});\r\n\r\n            })\r\n            .catch(err=>{\r\n              \r\n              console.log(\"Hellooo\");\r\n\r\n               this.setState ({errorOccured:true});\r\n               \r\n            });\r\n      }\r\n\r\n        \r\n\r\n              \r\n     render(){\r\n\r\n     \t    let  list = this.state.charityList;\r\n          console.log(list);\r\n      \t\treturn (\r\n      \t\t\t    <div>\r\n      \t\t          <div className=\" center charityList\">\r\n                  \t\t  { \r\n                            this.state.fetching === true?\r\n                              <div> <h4 className=\"fw4 dark-green\"> Looking up nearest charities...Please Wait... </h4> </div>\r\n                              :\r\n                              (\r\n                                this.state.error !== ''?\r\n                                  <div> <p className=\"dark-red center\"> Invalid input.{this.state.error}.Please check your input and try again.</p> </div>\r\n                                :\r\n                                  <div>\r\n                                          { list.map((charity, index) => \r\n                       \r\n                          \t          \t\t\t\t <ul> \r\n                                                  <div className=\" center dark-green\">\r\n                                                      <li className= \"fw6 white bg-dark-green\" key={index}> Name: {charity.charityName}</li> \r\n                                                      <h5>Type: {charity.irsClassification.classification}</h5> \r\n                                                      <h5> Address: {charity.mailingAddress.streetAddress1}</h5> \r\n                                                      <h5> {charity.mailingAddress.streetAddress2} </h5>\r\n                                                      <h5> City: {charity.mailingAddress.city} </h5>\r\n                                                      <h5> State: {charity.mailingAddress.stateOrProvince} </h5>\r\n                                                  </div>\r\n                                              </ul>           \r\n\r\n                                        )}\r\n                                </div>\r\n                              )\r\n                        }\r\n                          \r\n             \r\n                    </div>\r\n              </div>\r\n      \t\t);\r\n     }\r\n}\r\nexport default CharityList;\r\n","import React, { Component } from 'react';\r\n\r\nclass Charity extends React.Component {\r\n\t\r\n  render() {\r\n\r\n      const data  = this.props.data;\r\n\r\n \r\n  \treturn (\r\n\r\n    \t<div className=\"charity\">\r\n        <span className=\"charityText\">&#x3C;Charity/&#x3E;</span>\r\n        <div className=\"companyinfo\">\r\n          <div>Name: {data.charityName}</div>\r\n          <div>Email: {data.email}</div>\r\n          <div>Address: {data.mailingAddress}</div>\r\n          <div>mission: {data.mission}</div>\r\n        </div>\r\n    \t</div>\r\n    );\r\n  }\r\n}\r\nexport default Charity;","import React, { Component } from 'react';\r\nimport Navbar from './components/Navbar'\r\nimport SearchBar from './components/SearchBar'\r\nimport SlideShow from './components/SlideShow'\r\nimport CharityList from './components/CharityList'\r\nimport './App.css';\r\nimport './Nav.css'\r\nimport './Slide.css';\r\nimport food from './Images/food.svg';\r\n\r\n\r\nconst initialState = {\r\n  route:'Home',\r\n\r\n  data: {\r\n\r\n    criteria:'',\r\n    value:''\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n\r\n    this.getDataFromSearchBar = this.getDataFromSearchBar.bind(this);\r\n  }\r\n\r\n   onRouteChange = (route) => {\r\n    if( route === \"Home\"){\r\n      this.setState({route: \"Home\"});\r\n      this.setState({ data:{\r\n          value:'',\r\n          criteria:''\r\n      }})\r\n    }\r\n    else if( route === \"Search\"){\r\n      this.setState({route: \"Search\"});\r\n       this.setState({ data:{\r\n          value:'',\r\n          criteria:''\r\n      }})\r\n    }\r\n    else\r\n      this.setState({route: route});\r\n\r\n  }\r\n\r\n   getDataFromSearchBar = (value, criteria) => {\r\n       \r\n       this.setState({data: {value:value,criteria:criteria} });\r\n\r\n       //console.log(this.state.list);\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n           const {route} = this.state;\r\n \r\n    return (\r\n\r\n            <div className=\"App flex\">\r\n                \r\n                  <Navbar onRouteChange= { this.onRouteChange}> </Navbar> \r\n\r\n                  { \r\n                      route === \"Home\"? \r\n                        <div className=\"site-container flex flex-wrap\"> \r\n                            <div className=\"center mt7 ml7 w-30 pa0\">\r\n                               <h1 className=\"light-red dark-green orange fw6\">  Let's fight food waste together and help those in need in the process.</h1>\r\n                              <h3 className=\"light-red fw3 dark-green orange\">\r\n                                  Every day, thousands of pounds of perfectly good food \r\n                                  is wasted in the hotel/Restaurant industry while\r\n                                  thousands of needy people go hungry.\r\n                                  We want to solve this problem by\r\n                                  giving you a chance to connect instantly with \r\n                                  charities nearby who could \r\n                                  distribute this food to deserving people!\r\n                              </h3>\r\n\r\n                              <button className=\" center buttonn link  h-30 grow  w-30 white f6 pointer dim bg-dark-green ba pa3\"  onClick={() => this.onRouteChange('Search')}  >  Let's Go! </button>\r\n                          </div>\r\n\r\n                          <img className=\" o-75 flex h5 center mt7 mr5\" src={food}/>\r\n                      </div>\r\n                    : (  \r\n                        this.state.data.value !== ''?\r\n                          <div className= \"center mt5 w-300\"> <CharityList data={this.state.data}/></div>\r\n                        :\r\n\r\n                          <div className =\"center mt7 w-300\" >\r\n                             <SearchBar getData={this.getDataFromSearchBar}/>\r\n                          </div>\r\n                      )\r\n                } \r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}