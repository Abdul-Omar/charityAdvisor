{"version":3,"sources":["Images/background.jpeg","Images/background2.jpg","Images/background4.jpg","Images/background5.jpg","Images/food.svg","components/Navbar.js","components/SearchBar.js","components/CharityList.js","components/Charity.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","onRouteChange","className","onClick","href","title","url","URL","SearchBar","props","handleChange","event","setState","criteria","target","value","handleInput","sendDataToParent","getData","state","charityList","onSubmitSearch","params","app_id","app_key","zip","city","search","URLSearchParams","toString","fetch","then","response","json","data","bind","this","onChange","id","type","React","Component","CharityList","list","console","log","map","charity","index","key","charityName","irsClassification","classification","mailingAddress","streetAddress1","streetAddress2","stateOrProvince","initialState","input","route","App","getDataFromSearchBar","hideSlideShow","src","food","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.87cd54f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.0d34e806.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/background2.e3893f9b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background4.1febad35.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background5.4256c48a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/food.c2d14d7f.svg\";","\r\nimport React, { Component } from 'react';\r\nimport 'tachyons';\r\nimport '../Nav.css'\r\nconst Navbar = ({onRouteChange}) =>{\r\n\r\nreturn (\r\n     <nav className=\"bg-dark-green w-100 top-bar fixed mt0 pa3\">    \r\n         <ul className=\"main-nav dark-gray f6 fw6 ttu tracked \">\r\n            <li> <a  onClick={() => onRouteChange('Home')} className=\" link dim white  dib mr3\" href=\"#\" title=\"Home\">Home</a> </li>\r\n            <li className=\"Push\"><a onClick={() => onRouteChange('Home')} className=\"link Push dim  white\" href=\"#\" title=\"contact\">contact</a></li> \r\n        </ul>\r\n     </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport '../Nav.css';\r\nimport 'tachyons';\r\n\r\n\r\n\r\n\r\n\r\nconst url = new URL('https://cors-anywhere.herokuapp.com/https://api.data.charitynavigator.org/v2/Organizations');\r\n\r\nclass SearchBar extends React.Component {\r\n\r\n  constructor(props) {\r\n\t    super(props);\r\n\t    this.state = {\r\n\t       criteria: 'zip',\r\n\t       value:\"\",\r\n\t       charityList: []\r\n\r\n\t    }\r\n\r\n\t    this.handleChange = this.handleChange.bind(this);\r\n\t    this.handleInput = this.handleInput.bind(this);\r\n\t    this.sendDataToParent = this.sendDataToParent.bind(this);\r\n    }\r\n\r\n\r\n   handleChange = (event) =>\r\n      this.setState({criteria: event.target.value});\r\n   handleInput = (event) =>\r\n      this.setState({value: event.target.value});\r\n   \r\n   sendDataToParent = ()=> {\r\n\r\n   \t\t//e.preventDefault();\r\n   \t\tthis.props.getData(this.state.charityList);\r\n   \t\t//console.log(data);\r\n\r\n   }\r\n    onSubmitSearch = (event) => {\r\n\r\n\t     let filter=\"\";\r\n\r\n\t    const {criteria, value} = this.state; \r\n\t    let params;\r\n\r\n\t    if(criteria === \"zip\"){\r\n\r\n\t    \tfilter = \"zip\";\r\n\r\n\t    \t params = {app_id: 'b8cb661c', app_key: 'b55d0a5d26c6fad893f91244e7229e4b', zip:value}\r\n\t    }else if( criteria === \"city\"){\r\n\r\n\t    \t  filter = \"city\";\r\n\r\n\t    \t params = {app_id: 'b8cb661c', app_key: 'b55d0a5d26c6fad893f91244e7229e4b', city:value}\r\n\t    }\r\n\t    else{\r\n\t    \tfilter = \"name\";\r\n\r\n\t    \tparams = {app_id: 'b8cb661c', app_key: 'b55d0a5d26c6fad893f91244e7229e4b', search:value}\r\n\t    }\r\n\r\n\r\n\t\turl.search = new URLSearchParams(params).toString();\r\n\t    fetch(url)\r\n\t      .then(response => response.json())\r\n\t      .then(data => {\r\n\r\n\t      \tthis.setState({\r\n\r\n\t      \t\tcharityList:data\r\n\t      \t})\r\n\t      \t\r\n\t      \t//console.log(this.state.charityList.length);\r\n\r\n\t      \tthis.sendDataToParent();\r\n\r\n\t      })\r\n    }\r\n\t\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t     <div className= \"flex center\">\r\n\t\t\t\t\t<form className=\"flex-column center search pt5 black-80\">\r\n\t\t\t\t\t<div> \r\n\t\t\t\t        <label>\r\n\t\t\t\t         Search charity by:   \r\n\t\t\t\t          <select  className=\"center fw6 w-300\" criteria={this.state.criteria} onChange={this.handleChange}>\r\n\t\t\t\t            <option value=\"zip\">Zip Code</option>\r\n\t\t\t\t            <option value=\"city\">City</option>\r\n\t\t\t\t            <option value=\"name\">Name</option>\r\n\t\t\t\t          </select>\r\n\t\t\t\t        </label>\r\n\t\t\t        </div>\r\n\t\t\t\t  <div className=\"measure\">\r\n\t\t\t\t    <input value={this.state.value} onChange={this.handleInput} id=\"name\" className=\"input-reset ba b--black-20 pa2 pl4 mb2 \" type=\"text\"/>\r\n\t\t\t\t    <a  onClick= {this.onSubmitSearch} className=\" center buttonn w-70 f6 grow no-underline br-pill ph3 pv2 mb2 dib white bg-dark-green w-300\" href=\"#0\">Go!</a>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default SearchBar","import React, { Component } from 'react';\r\nimport '../Nav.css';\r\nimport './charityList.css';\r\nimport Charity from './Charity'\r\n\r\nvar list = [];\r\nclass CharityList extends React.Component {\r\n\r\n   \r\n\r\n     render(){\r\n\r\n     \tlet  list = this.props.data;\r\n\r\n     \tconsole.log(this.props.data[0]);\r\n\t\treturn (\r\n\t\t\t    <div>\r\n\t\t         <div className=\" b--dark-green charityList\">\r\n          \t\t\t<span className=\"charityListText\"> &#x3C;Charity List/&#x3E;</span>\r\n          \t\t\t <div>\r\n          \t\t\t\t{list.map((charity, index) => \r\n\r\n          \t\t\t\t\t \r\n\t          \t\t\t\t <ul> \r\n                        <div className=\" b--dark-green\">\r\n                        <li className= \"fw6 dark-blue\" key={index}> Name: {charity.charityName}</li> \r\n                        <h5>Type: {charity.irsClassification.classification}</h5> \r\n                        <h5> Address: {charity.mailingAddress.streetAddress1}</h5> \r\n                        <h5> {charity.mailingAddress.streetAddress2} </h5>\r\n                        <h5> City: {charity.mailingAddress.city} </h5>\r\n                         <h5> State: {charity.mailingAddress.stateOrProvince} </h5>\r\n                        </div>\r\n\r\n\r\n                     </ul>\r\n          \t\t\t\t\r\n          \t\t\t\t)}\r\n          \t\t\t</div>\r\n         \t\t </div>\r\n\r\n         \t\t</div>\r\n\t\t);\r\n     }\r\n}\r\nexport default CharityList;\r\n","import React, { Component } from 'react';\r\n\r\nclass Charity extends React.Component {\r\n\t\r\n  render() {\r\n\r\n      const data  = this.props.data;\r\n\r\n \r\n  \treturn (\r\n\r\n    \t<div className=\"charity\">\r\n        <span className=\"charityText\">&#x3C;Charity/&#x3E;</span>\r\n        <div className=\"companyinfo\">\r\n          <div>Name: {data.charityName}</div>\r\n          <div>Email: {data.email}</div>\r\n          <div>Address: {data.mailingAddress}</div>\r\n          <div>mission: {data.mission}</div>\r\n        </div>\r\n    \t</div>\r\n    );\r\n  }\r\n}\r\nexport default Charity;","import React, { Component } from 'react';\r\nimport Navbar from './components/Navbar'\r\nimport SearchBar from './components/SearchBar'\r\nimport SlideShow from './components/SlideShow'\r\nimport CharityList from './components/CharityList'\r\nimport './App.css';\r\nimport './Nav.css'\r\nimport './Slide.css';\r\nimport food from './Images/food.svg';\r\n\r\n\r\nconst initialState = {\r\n  input: '',\r\n  route:'Home',\r\n  list:[]\r\n}\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n\r\n    this.getDataFromSearchBar = this.getDataFromSearchBar.bind(this);\r\n  }\r\n\r\n   onRouteChange = (route) => {\r\n    if( route == \"Home\"){\r\n      this.setState({route: \"Home\"});\r\n    }\r\n    else if( route == \"Search\"){\r\n      this.setState({route: \"Search\"});\r\n    }\r\n    else\r\n      this.setState({route: route});\r\n\r\n  }\r\n\r\n   getDataFromSearchBar = (data, hideSlideShow) => {\r\n       \r\n       this.setState({list:data});\r\n\r\n       //console.log(this.state.list);\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n           const {route} = this.state;\r\n \r\n    return (\r\n\r\n            <div className=\"App flex\">\r\n              <Navbar onRouteChange= { this.onRouteChange}> </Navbar> \r\n\r\n              {route === \"Home\"? \r\n                  <div className=\" flex flex-wrap\"> \r\n                    <div className=\"center mt7 w-30 pa0\">\r\n                       <h1 className=\"light-red dark-green orange fw6\">  Let's fight food waste together and help those in need in the process.</h1>\r\n                      <h3 className=\"light-red fw3 dark-green orange\">\r\n                          Every day, thousands of pounds of perfectly good food \r\n                          is wasted in the hotel/Restaurant industry while\r\n                          thousands of needy people go hungry.\r\n                          We want to solve this problem by\r\n                          giving you a chance to connect instantly with \r\n                          charities nearby who could \r\n                          distribute this food to deserving people!\r\n                      </h3>\r\n\r\n                      <button className=\"link  h-20 grow  w-20 white f6 pointer dim bg-dark-green br-pill\"  onClick={() => this.onRouteChange('Search')}  >  Let's Go! </button>\r\n                  </div>\r\n\r\n                  <img className=\" o-75 flex h5 center mt7\" src={food}/>\r\n              </div>\r\n              :\r\n              <div className =\"center mt7 w-300\" >\r\n                 <SearchBar getData={this.getDataFromSearchBar}/>\r\n                <CharityList data={this.state.list}/>\r\n              </div>\r\n\r\n            } \r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}